cmake_minimum_required(VERSION 3.14)
project(halide_test_opencv)
find_package(OpenCV REQUIRED)
set(HALIDE_DISTRIB_DIR "d:/cpp/halide/" CACHE PATH "path to halide distribution")
  add_library(Halide SHARED IMPORTED GLOBAL)
  if (WIN32)
    message(STATUS "Using Shared Library: ${HALIDE_DISTRIB_DIR}/$<CONFIG>/${CMAKE_SHARED_LIBRARY_PREFIX}Halide${CMAKE_SHARED_LIBRARY_SUFFIX}")
    set_target_properties(Halide PROPERTIES
      INTERFACE_INCLUDE_DIRECTORIES ${HALIDE_DISTRIB_DIR}/include
      IMPORTED_LOCATION_RELEASE ${HALIDE_DISTRIB_DIR}/Release/${CMAKE_SHARED_LIBRARY_PREFIX}Halide${CMAKE_SHARED_LIBRARY_SUFFIX}
      IMPORTED_LOCATION_RELWITHDEBINFO ${HALIDE_DISTRIB_DIR}/Debug/${CMAKE_SHARED_LIBRARY_PREFIX}Halide${CMAKE_SHARED_LIBRARY_SUFFIX}
      IMPORTED_LOCATION_DEBUG ${HALIDE_DISTRIB_DIR}/Debug/${CMAKE_SHARED_LIBRARY_PREFIX}Halide${CMAKE_SHARED_LIBRARY_SUFFIX}
    )
    set_target_properties(Halide PROPERTIES
      IMPORTED_IMPLIB_RELEASE ${HALIDE_DISTRIB_DIR}/Release/${CMAKE_STATIC_LIBRARY_PREFIX}Halide${CMAKE_STATIC_LIBRARY_SUFFIX}
      IMPORTED_IMPLIB_RELWITHDEBINFO ${HALIDE_DISTRIB_DIR}/Debug/${CMAKE_STATIC_LIBRARY_PREFIX}Halide${CMAKE_STATIC_LIBRARY_SUFFIX}
      IMPORTED_IMPLIB_DEBUG ${HALIDE_DISTRIB_DIR}/Debug/${CMAKE_STATIC_LIBRARY_PREFIX}Halide${CMAKE_STATIC_LIBRARY_SUFFIX}
    )
  else()
    message(STATUS "Using Shared Library: ${HALIDE_DISTRIB_DIR}/bin/${CMAKE_SHARED_LIBRARY_PREFIX}Halide${CMAKE_SHARED_LIBRARY_SUFFIX}")
    set_target_properties(Halide PROPERTIES
      INTERFACE_INCLUDE_DIRECTORIES ${HALIDE_DISTRIB_DIR}/include
      IMPORTED_LOCATION ${HALIDE_DISTRIB_DIR}/bin/${CMAKE_SHARED_LIBRARY_PREFIX}Halide${CMAKE_SHARED_LIBRARY_SUFFIX}
    )
  endif()
  target_include_directories(Halide INTERFACE ${HALIDE_DISTRIB_DIR}/tools)

link_libraries(Halide ${OpenCV_LIBS})
include_directories(${HALIDE_INCLUDE_DIR} ${HALIDE_TOOLS_DIR})

add_executable(halide_test_opencv test.cpp)
add_executable(rgb_interleaved rgb_interleaved.cpp)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/rgb.png ${CMAKE_CURRENT_BINARY_DIR}/rgb.png COPYONLY)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/gray.png ${CMAKE_CURRENT_BINARY_DIR}/gray.png COPYONLY)